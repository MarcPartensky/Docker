server {
	listen 80;
	server_name docker.marcpartensky.com;

	return 301 https://$host$request_uri;
}

server {
	listen 80;
	server_name portainer.marcpartensky.com;

	return 301 https://docker.marcpartensky.com$request_uri;
}

server {
	listen 443 ssl http2;
	server_name portainer.marcpartensky.com;

	# ssl keys + letsencrypt
	ssl_certificate /etc/letsencrypt/live/portainer.marcpartensky.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/portainer.marcpartensky.com/privkey.pem;

	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	# logs
	access_log /var/log/nginx/reverse-access.log;
	error_log /var/log/nginx/reverse-error.log;


	location /.well-known/acme-challenge/ {
		allow all;
		root /var/www/certbot;
	}

	return 301 https://docker.marcpartensky.com$request_uri;
}

server {
	listen 443 ssl http2;
	server_name docker.marcpartensky.com;

	# ssl keys + letsencrypt
	ssl_certificate /etc/letsencrypt/live/docker.marcpartensky.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/docker.marcpartensky.com/privkey.pem;

	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	# logs
	access_log /var/log/nginx/reverse-access.log;
	error_log /var/log/nginx/reverse-error.log;


	location /.well-known/acme-challenge/ {
		allow all;
		root /var/www/certbot;
	}

	location / {
		proxy_pass http://portainer:9000;
		# proxy_redirect off;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
	}
}
