version: "3.9"

services:
  traefik:
    image: traefik:2.9.1 # https://github.com/wiltonsr/ldapauth/issues/25
    # image: traefik:latest # https://github.com/wiltonsr/ldapauth/issues/25
    restart: unless-stopped
    env_file:
      - ../data/secrets/traefik.env
    # restart: unless-stopped
    # command:
    #   ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
    #   # - --providers.docker.exposedbydefault=false # <== Don't expose every container to traefik, only expose enabled ones
    #   - --providers.file.filename=/dynamic.yaml # <== Referring to a dynamic configuration file
    #   # - --providers.docker.network=web # <== Operate on the docker network named web
    #   - --providers.docker=true # <== Enabling docker as the provider for traefik
    #   ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
    #   - --api.insecure=false # <== Enabling insecure api, NOT RECOMMENDED FOR PRODUCTION
    #   - --api.dashboard=true
    #   - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
    #   ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
    #   - --entrypoints.web.address=:80
    #   - --entrypoints.websecure.address=:443
    #   - --certificatesresolvers.tls.acme.tlschallenge=true # <== Enable TLS-ALPN-01 to generate and renew ACME certs
    #   - --certificatesresolvers.tls.acme.email=marc.partensky@gmail.com
    #   - --certificatesresolvers.tls.acme.storage=/letsencrypt/acme.json # Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
    #   - --log.level=DEBUG # <== Setting the level of the logs from traefik
    #   - --entrypoints.web.http.redirections.entryPoint.to=websecure
    #   - --entrypoints.web.http.redirections.entryPoint.scheme=https
    #   - --entrypoints.web.http.redirections.entrypoint.permanent=true
    # ports:
    #   - target: 80
    #     published: 80
    #     mode: host
    #   - target: 443
    #     published: 443
    #     mode: host
    networks:
      - caddy
      - ldap
    volumes:
      - ../data/traefik:/etc/traefik
        # - traefik_letsencrypt:/letsencrypt
      - traefik:/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`traefik.marcpartensky.com`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.entrypoints: web
        # traefik.http.routers.traefik.tls.certresolver: tls
      traefik.docker.network: caddy
    healthcheck:
      test: traefik healthcheck --ping
    deploy:
      placement:
        constraints:
          - node.role == manager
      # mode: global
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
        failure_action: rollback
      rollback_config:
        order: start-first
      labels:
        traefik.enable: "true"
        traefik.port: 8080
          # traefik.docker.network: caddy
        traefik.http.services.traefik.loadbalancer.server.port: 8080
          # traefik.http.routers.traefik.service: api@internal
        # traefik.http.routers.traefik.entrypoints: websecure
        traefik.http.routers.traefik.entrypoints: web
        traefik.http.routers.traefik.rule: >
          Host(`traefik.marcpartensky.com`)
        # traefik.http.routers.traefik.tls.certresolver: tls
        # ldapAuth Options=================================================================
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.enabled: "true"
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.logLevel: "DEBUG"
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.url: ldaps://ldap
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.port: 636
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.useTLS: "true"
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.insecureSkipVerify: "true"
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.baseDN: "ou=people,dc=admin,dc=org"
        # traefik.http.middlewares.ldap_auth.plugin.ldapAuth.attribute: uid

volumes:
  # traefik_letsencrypt:
  # traefik_certs:
  traefik:
    # name: "vps_traefik_letsencrypt"
    name: traefik
    external: true

networks:
  ldap:
    external: true
  caddy:
    external: true
