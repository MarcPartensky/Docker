# Essential services for AppFlowy Cloud

version: "3.9"
services:
  appflowy-nginx:
    restart: on-failure
    image: nginx
    # ports:
    #   - 80:80   # Disable this if you are using TLS
    volumes:
      - ../data/appflowy/nginx.conf:/etc/nginx/nginx.conf
        # - ./nginx/ssl/certificate.crt:/etc/nginx/ssl/certificate.crt
        # - ./nginx/ssl/private_key.key:/etc/nginx/ssl/private_key.key
    networks:
      - caddy
    labels:
      traefik.enable: "true"
      traefik.http.services.appflowy.loadbalancer.server.port: 80
      traefik.http.routers.appflowy.rule: >
        Host(`appflowy.marcpartensky.com`)
      traefik.http.routers.appflowy.entrypoints: web
      # traefik.http.routers.appflowy.tls.certresolver: tls
      traefik.http.routers.appflowy.middlewares: ldap_auth

  gotrue:
    image: appflowyinc/gotrue:${GOTRUE_VERSION:-latest}
    restart: on-failure
    networks:
      - caddy
      - postgres
    env_file:
      - ../data/secrets/appflowy.env

  appflowy-cloud:
    image: appflowyinc/appflowy_cloud:${BACKEND_VERSION:-latest}
    restart: on-failure
    env_file:
      - ../data/secrets/appflowy.env

  appflowy-admin:
    restart: on-failure
    image: appflowyinc/admin_frontend:${BACKEND_VERSION:-latest}
    depends_on:
      - gotrue
    env_file:
      - ../data/secrets/appflowy.env

networks:
  caddy:
    external: true
  postgres:
    external: true
  redis:
    external: true
