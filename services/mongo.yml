version: "3.9"

services:
  mongo:
    image: mongo
    restart: unless-stopped
    volumes:
      - ../data/mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ../data/mongo/config:/etc/mongo
      - mongo:/data/db
    networks:
      - mongo
    ports:
      - "27017:27017"
    env_file:
      - ../data/secrets/mongo.env
    # healthcheck:
    #   test: CMD echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet

  express:
    image: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: "ambiance"
    env_file:
      - ../data/secrets/mongo_express.env
    networks:
      - mongo
      - caddy
    depends_on:
      - mongo
    labels:
      caddy: mongo.marcpartensky.com, mongo.marc.wf, mongo.marc.tf
      caddy.reverse_proxy: "{{upstreams 8081}}"
      traefik.enable: "true"
      traefik.http.routers.mongo.rule: Host(`mongo.marcpartensky.com`)
      traefik.http.routers.mongo.entrypoints: websecure
      traefik.http.routers.mongo.tls.certresolver: tls
      traefik.http.services.mongo.loadbalancer.server.port: 8081
      traefik.http.routers.duplicati.middlewares: ldap_auth
    deploy:
      labels:
        traefik.enable: "true"
        # traefik.http.routers.mongo.rule: Host(`mongo.marcpartensky.com`)
        traefik.http.routers.mongo.rule: >
          Host(`mongo.marcpartensky.fr`) ||
          Host(`mongo.marcpartensky.com`)
        traefik.http.routers.mongo.entrypoints: websecure
        traefik.http.routers.mongo.tls.certresolver: tls
        traefik.http.services.mongo.loadbalancer.server.port: 8081
        traefik.http.routers.mongo.middlewares: ldap_auth

volumes:
  mongo:

networks:
  mongo:
    external: true
  caddy:
    external: true
    attachable: true
    driver: overlay
