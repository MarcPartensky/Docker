version: "3.9"

services:
  swarmpit:
    image: swarmpit/swarmpit:latest
    environment:
      SWARMPIT_DB: http://swarmpit_db:5984
      SWARMPIT_INFLUXDB: http://swarmpit_influxdb:8086
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 60s
      timeout: 10s
      retries: 3
    networks:
      - swarmpit
      - caddy
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
      labels:
        traefik.http.routers.swarmpit.rule: Host(`swarm.marcpartensky.com`)
        traefik.http.routers.swarmpit.entrypoints: websecure
        traefik.http.routers.swarmpit.tls.certresolver: tls
        traefik.http.services.swarmpit.loadbalancer.server.port: 8080
        # reservations:
        #   cpus: '0.25'
        #   memory: 512M
      # placement:
      #   constraints:
      #     - node.role == manager
    depends_on:
      - swarmpit_db
      - swarmpit_influxdb
      - swarmpit_agent
    labels:
      caddy: swarm.marcpartensky.com
      caddy.reverse_proxy: "{{upstreams http 8080}}"
      traefik.enable: "true"
      traefik.http.routers.swarmpit.rule: Host(`swarm.marcpartensky.com`)
      traefik.http.routers.swarmpit.entrypoints: websecure
      traefik.http.routers.swarmpit.tls.certresolver: tls
      traefik.http.services.swarmpit.loadbalancer.server.port: 8080

networks:
  swarmpit:
  caddy:
    external: true
