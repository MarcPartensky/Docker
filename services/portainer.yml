version: "3.9"

services:
  portainer:
    restart: unless-stopped
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - caddy
      - portainer
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.rule: Host(`docker.marcpartensky.com`)
      traefik.http.routers.portainer.entrypoints: web
      # traefik.http.routers.portainer.tls.certresolver: tls
      traefik.http.services.portainer.loadbalancer.server.port: 9000

  agent:
    image: portainer/agent:2.18.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer
    # deploy:
      # mode: global
      # placement:
      #   constraints: [node.platform.os == linux]

#   portainer:
#     image: portainer/portainer-ce:2.18.2
#     command: -H tcp://agent:9001 --tlsskipverify
#     depends_on:
#       - agent
#     # ports:
#     #   - "9443:9443"
#     #   - "9000:9000"
#     #   - "8000:8000"
#     networks:
#       - caddy
#       - portainer
#     volumes:
#       - data:/data
#     deploy:
#       mode: replicated
#       replicas: 1
#       placement:
#         constraints: [node.role == manager]
#       labels:
#         traefik.enable: "true"
#         traefik.http.routers.portainer.rule: >
#           Host(`docker.marcpartensky.fr`) && Host(`docker.marcpartensky.com`)
#         traefik.http.routers.portainer.entrypoints: websecure
#         # traefik.http.routers.portainer.tls.certresolver: tls
#         traefik.http.routers.portainer.tls.certresolver: cloudflare
#         traefik.http.services.portainer.loadbalancer.server.port: 9000
#
#   # portainer:
#   #   image: portainer/portainer-ce
#   #   restart: unless-stopped
#   #   # environment:
#   #   #   VIRTUAL_HOST: docker.marcpartensky.com
#   #   #   VIRTUAL_PORT: 9000
#   #   volumes:
#   #     - /var/run/docker.sock:/var/run/docker.sock
#   #     - portainer:/data
#   #   networks:
#   #     - caddy
#   #   command:
#   #     - --logo
#   #     - https://marcpartensky.com/static/home/assets/img/white-orchid.svg
#   #       # healthcheck:
#   #       # test: ["CMD", "curl", "-f", "http://localhost:9000"]
#   #       # test: ["CMD", "portainer", "--healthcheck"]
#   #   depends_on:
#   #     - caddy
#   #   labels:
#   #     caddy: docker.marcpartensky.com
#   #     caddy.reverse_proxy: "{{upstreams 9000}}"
#   #     traefik.enable: "true"
#   #     traefik.http.routers.portainer.rule: Host(`docker.marcpartensky.com`)
#   #     traefik.http.routers.portainer.entrypoints: websecure
#   #     traefik.http.routers.portainer.tls.certresolver: tls
#   #     traefik.http.services.portainer.loadbalancer.server.port: 9000
#   #   deploy:
#   #     labels:
#   #       traefik.enable: "true"
#   #       traefik.http.routers.portainer.rule: >
#   #         Host(`docker.marcpartensky.fr`) && Host(`docker.marcpartensky.com`)
#   #       traefik.http.routers.portainer.entrypoints: websecure
#   #       traefik.http.routers.portainer.tls.certresolver: tls
#   #       traefik.http.services.portainer.loadbalancer.server.port: 9000
#   #
volumes:
  # portainer:
  data:

networks:
  portainer:
  caddy:
    external: true
