version: "3.9"
services:
  ldap_sync:
    image: docker.io/marcpartensky/vaultwarden-ldap
    environment:
      CONFIG_PATH: /config.toml
      RUST_BACKTRACE: 1
    volumes:
      - ../data/vaultwarden/config.toml:/config.toml:ro
      # ./root.cert:/usr/src/vaultwarden_ldap/root.cert:ro
    networks:
      - vaultwarden
      - ldap
    depends_on:
      - vaultwarden
    # networks:
    #   - vaultwarden
    #   - ldap

  vaultwarden:
    image: docker.io/vaultwarden/server
    restart: unless-stopped
    env_file:
      - ../data/secrets/vaultwarden.env
    # environment:
    #   SIGNUPS_ALLOWED: "true"
    #   INVITATIONS_ALLOWED: "true"
    #   WEBSOCKET_ENABLED: "true"
    volumes:
      - data:/data
    networks:
      - caddy
      - vaultwarden
      - postgres
    labels:
      # caddy: vault.marcpartensky.com
      # caddy.reverse_proxy: "{{upstreams 80}}"
      traefik.enable: "true"
      traefik.http.routers.vaultwarden.rule: Host(`vault.marcpartensky.com`)
      traefik.http.routers.vaultwarden.entrypoints: web
      # traefik.http.routers.vaultwarden.tls.certresolver: tls
      traefik.http.services.vaultwarden.loadbalancer.server.port: 80
    # deploy:
    #   labels:
    #     traefik.enable: "true"
    #     traefik.http.routers.vaultwarden.rule: >
    #       Host(`vault.marcpartensky.com`)
    #     traefik.http.routers.vaultwarden.entrypoints: websecure
    #     traefik.http.routers.vaultwarden.tls.certresolver: cloudflare
    #     traefik.http.services.vaultwarden.loadbalancer.server.port: 80
    #
  # ldap_admin:
  #   image: osixia/phpldapadmin
  #   ports:
  #     - 8001:80
  #   environment:
  #     PHPLDAPADMIN_HTTPS: 'false'
  #     PHPLDAPADMIN_LDAP_HOSTS: ldap
volumes:
  data:

networks:
  vaultwarden:
  postgres:
    external: true
  ldap:
    external: true
  caddy:
    external: true
