version: "3.9"

services:
  registry:
    restart: unless-stopped
    image: registry:latest
    environment:
      REGISTRY_HTTP_ADDR: 0.0.0.0:80
      # REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      # REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      # REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      # REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    env_file:
      - ../data/secrets/registry.env
    volumes:
      - registry_data:/var/lib/registry
      - registry_certs:/certs
      - registry_auth:/auth
    depends_on:
      - caddy
    networks:
      - caddy
    labels:
      caddy: registry.marcpartensky.com, r.marc.wf
      caddy.reverse_proxy: "{{upstreams 80}}"
      traefik.enable: "true"
      traefik.http.routers.registry.rule: Host(`registry.marcpartensky.com`)
      traefik.http.routers.registry.entrypoints: websecure
      traefik.http.routers.registry.tls.certresolver: "tls"
      traefik.http.services.registry.loadbalancer.server.port: 80
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.registry.rule: Host(`registry.marcpartensky.com`)
        traefik.http.routers.registry.entrypoints: websecure
        traefik.http.routers.registry.tls.certresolver: "tls"
        traefik.http.services.registry.loadbalancer.server.port: 80

  registry_browser:
    image: klausmeyer/docker-registry-browser
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.registry_browser.rule: Host(`ui.registry.marcpartensky.com`)
        traefik.http.routers.registry_browser.entrypoints: websecure
        traefik.http.routers.registry_browser.tls.certresolver: "tls"
        traefik.http.services.registry_browser.loadbalancer.server.port: 8080

volumes:
  registry_data:
  registry_certs:
  registry_auth:

networks:
  caddy:
    external: true
