version: "3.9"
services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    # user: postgres:postgres
    # user: "974:974"
    ports:
      - target: 5432
        published: 5432
        mode: host
    volumes:
      - ../data/postgres:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
      - ../data/postgres/server.crt:/var/lib/postgresql/server.crt
      - ../data/postgres/server.key:/var/lib/postgresql/server.key
    env_file:
      - ../data/secrets/postgres.env
    command: |
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c ssl=on
      -c ssl_cert_file=/var/lib/postgresql/server.crt
      -c ssl_key_file=/var/lib/postgresql/server.key
    networks:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3

  pgagent:
    image: chiavegatto/postgres-pgagent
    entrypoint: /bin/sh -c
                "/tmp/wait-for-it.sh postgres:5432 --timeout=30 &&
                psql -U postgres -h postgres -p 5432 -d postgres -c 'CREATE EXTENSION IF NOT EXISTS pgagent;' &&
                pgagent -f hostaddr=postgres dbname=postgres user=postgres port=5432"
    environment:
      TIMEZONE: Europe/Paris
    env_file:
      - ../data/secrets/postgres.env
    networks:
      - postgres

  backup:
    image: kartoza/pg-backup:14-3.1
    env_file:
      - ../data/secrets/pg_backup.env
    networks:
      - postgres
    volumes:
      - /srv/pg-backup:/backups

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: unless-stopped
    # user: postgres:postgres
    volumes:
      - /srv/pgbackups:/backups
    # links:
    #   - postgres
    # depends_on:
    #   - postgres
    networks:
      - postgres
    env_file:
      - ../data/secrets/pgbackups.env

volumes:
  postgres:

networks:
  postgres:
    external: true
